/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import LoginController.LoginController;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import java.sql.SQLException;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import view.Loginview;

/**
 *
 * @author pires
 */
public class Cadastroview extends javax.swing.JFrame {
    private boolean cpfValido;
    private Loginview telaDeLogin;

   public Cadastroview(Loginview telaDeLogin) {
        initComponents();
        this.telaDeLogin = telaDeLogin;
    }
    

      
   
    private void voltarParaTelaDeLogin() {
        // Torna a tela de cadastro invisível
        this.setVisible(false);
        
        // Torna a tela de login visível novamente
        telaDeLogin.setVisible(true);
         
    }

    /**
     * Creates new form Cadastroview
     */

    private boolean validarCPF(String cpf) {
    // Remove caracteres não numéricos do CPF
    cpf = cpf.replaceAll("[^0-9]", "");

    // Verifica se o CPF tem 11 dígitos
    if (cpf.length() != 11) {
        return false;
    }

    // Verifica se todos os dígitos são iguais, o que torna o CPF inválido
    boolean todosDigitosIguais = true;
    for (int i = 1; i < 11; i++) {
        if (cpf.charAt(i) != cpf.charAt(0)) {
            todosDigitosIguais = false;
            break;
        }
    }
    if (todosDigitosIguais) {
        return false;
    }

    // Cálculo dos dígitos verificadores
    int[] digitos = new int[11];
    for (int i = 0; i < 11; i++) {
        digitos[i] = Character.getNumericValue(cpf.charAt(i));
    }

    int soma1 = 0;
    int soma2 = 0;

    for (int i = 0; i < 9; i++) {
        soma1 += digitos[i] * (10 - i);
        soma2 += digitos[i] * (11 - i);
    }

    int digito1 = 11 - (soma1 % 11);
    if (digito1 >= 10) {
        digito1 = 0;
    }

    soma2 += digito1 * 2;
    int digito2 = 11 - (soma2 % 11);
    if (digito2 >= 10) {
        digito2 = 0;
    }
    

    // Verifica se os dígitos verificadores calculados são iguais aos do CPF
    return digito1 == digitos[9] && digito2 == digitos[10];
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1Email = new javax.swing.JTextField();
        jTextFieldNome = new javax.swing.JTextField();
        jPasswordFieldSenha = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jComboBoxCargo = new javax.swing.JComboBox<>();
        jTextFieldCPF = new javax.swing.JTextField();
        jTextFieldUSUARIO = new javax.swing.JTextField();
        jButtonValidar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Rastreio Express - tela de cadastro");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField1Email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1EmailActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1Email, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 260, 280, 30));

        jTextFieldNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNomeActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 160, 280, 30));
        getContentPane().add(jPasswordFieldSenha, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 390, 280, 30));

        jButton1.setContentAreaFilled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 530, 170, 60));

        jButton2.setContentAreaFilled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 530, 170, 60));

        jComboBoxCargo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrativo", "Gerente" }));
        jComboBoxCargo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxCargoActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBoxCargo, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 300, 280, 30));

        jTextFieldCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCPFActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldCPF, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 210, 220, 30));

        jTextFieldUSUARIO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldUSUARIOActionPerformed(evt);
            }
        });
        getContentPane().add(jTextFieldUSUARIO, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 340, 280, 30));

        jButtonValidar.setContentAreaFilled(false);
        jButtonValidar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonValidarActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonValidar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 210, 120, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Resources/LoginCadastro.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1280, 710));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int tentativas = 5;
 

  if (jTextFieldNome.getText().isEmpty() || jTextField1Email.getText().isEmpty() || 
        jPasswordFieldSenha.getText().isEmpty() || jTextFieldUSUARIO.getText().isEmpty() || 
        jTextFieldCPF.getText().isEmpty()) {
        JOptionPane.showMessageDialog(rootPane, "Preencha todos os campos");
    } else if (!cpfValido) {
        JOptionPane.showMessageDialog(rootPane, "CPF inválido. Não é possível cadastrar.");
    } else {
        if ("Administrativo".equalsIgnoreCase((String) jComboBoxCargo.getSelectedItem())) {
            try {
                LoginController cadastro = new LoginController();
                cadastro.cadastroUsuario(this, "000000");
                JOptionPane.showMessageDialog(rootPane, "LOGIN DE ADMINISTRADOR CRIADO COM SUCESSO");

            } catch (SQLException sql) {
                // Tratar exceção, se necessário
            }
            this.setVisible(false);
        } else {
            boolean codigoCorreto = false;

            while (!codigoCorreto) {
                String codigoGerente = JOptionPane.showInputDialog(rootPane, "Digite o código de gerente:");

                if (codigoGerente == null) {
                    // Se o usuário cancelar, não faz nada e sai do loop
                    break;
                }

                if ("000000".equals(codigoGerente)) {
                    codigoCorreto = true;
                    try {
                        LoginController cadastro = new LoginController();
                        cadastro.cadastroUsuario(this, codigoGerente);
                        JOptionPane.showMessageDialog(rootPane, "LOGIN CRIADO COM SUCESSO");
                        

                                                                                                               
                        
                        

                    } catch (SQLException sql) {
                        // Tratar exceção, se necessário
                    }
                            this.setVisible(false);

                    
                    

                   
                } else {
                    while(tentativas > 0){
                        tentativas = tentativas - 1;
                        JOptionPane.showMessageDialog(rootPane, "Código de gerente incorreto." + tentativas + " Tentativas restantes.");
                    break;
                    }
                }
            }
        }
                telaDeLogin.setVisible(true);

    }




    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         voltarParaTelaDeLogin();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBoxCargoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxCargoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxCargoActionPerformed

    private void jTextFieldNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNomeActionPerformed

    private void jTextField1EmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1EmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1EmailActionPerformed

    private void jTextFieldUSUARIOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldUSUARIOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldUSUARIOActionPerformed

    private void jButtonValidarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonValidarActionPerformed
      String cpf = jTextFieldCPF.getText();
    if (validarCPF(cpf)) {
        JOptionPane.showMessageDialog(rootPane, "CPF válido");
        cpfValido = true; // Ativa o sinal de CPF válido
        jButton1.setEnabled(true); // Habilita o botão de cadastrar
    } else {
        JOptionPane.showMessageDialog(rootPane, "CPF inválido");
        cpfValido = false; // Desativa o sinal de CPF válido
        jButton1.setEnabled(false); // Desabilita o botão de cadastrar
    }
 

    }//GEN-LAST:event_jButtonValidarActionPerformed

    private void jTextFieldCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCPFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCPFActionPerformed

    public JTextField getjTextFieldCPF() {
        return jTextFieldCPF;
    }

    public void setjTextFieldCPF(JTextField jTextFieldCPF) {
        this.jTextFieldCPF = jTextFieldCPF;
    }

    public JTextField getjTextFieldUSUARIO() {
        return jTextFieldUSUARIO;
    }

    public void setjTextFieldUSUARIO(JTextField jTextFieldUSUARIO) {
        this.jTextFieldUSUARIO = jTextFieldUSUARIO;
    }
    
    public JPasswordField getjPasswordFieldSenha() {
        return jPasswordFieldSenha;
    }

    public void setjPasswordFieldSenha(JPasswordField jPasswordFieldSenha) {
        this.jPasswordFieldSenha = jPasswordFieldSenha;
    }

    public JTextField getjTextField1Email() {
        return jTextField1Email;
    }

    public void setjTextField1Email(JTextField jTextField1Email) {
        this.jTextField1Email = jTextField1Email;
    }

    public JTextField getjTextFieldNome() {
        return jTextFieldNome;
    }

    public void setjTextFieldNome(JTextField jTextFieldNome) {
        this.jTextFieldNome = jTextFieldNome;
    }
    public JComboBox<String> getjComboBoxCargo() {
        return jComboBoxCargo;
    }
    

   public void setjComboBoxCargo(JComboBox<String> jComboBoxCargo) {
        this.jComboBoxCargo = jComboBoxCargo;
    }
    
    
    /**
     * @param args the command line arguments
     */

   

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonValidar;
    private javax.swing.JComboBox<String> jComboBoxCargo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPasswordField jPasswordFieldSenha;
    private javax.swing.JTextField jTextField1Email;
    private javax.swing.JTextField jTextFieldCPF;
    private javax.swing.JTextField jTextFieldNome;
    private javax.swing.JTextField jTextFieldUSUARIO;
    // End of variables declaration//GEN-END:variables
}
